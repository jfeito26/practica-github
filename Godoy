        _dir = new Vector2(Input.GetAxis("Horizontal"), 0);
        Jump();
    }

    private void FixedUpdate()
    {
        _rb.velocity = new Vector2(_dir.x * speed, _rb.velocity.y);
        ApplyYForce();
    }

    void Jump()
    {
        if(Input.GetButton("Jump") && IsGrounded())
        {
            isJumping = true;
        }
    }

    void ApplyYForce()
    {
        if (isJumping)
        {
            //_rb.velocity = new Vector2(_rb.velocity.x, 0);//reseteamos el vector de bajada(a cero) para que el de subida sea positivo.
            _rb.AddForce(Vector2.up * force * _rb.gravityScale, ForceMode2D.Impulse);
            isJumping = false;
        }
    }

    private bool IsGrounded()
    {
        Collider2D collider = Physics2D.OverlapCircle(new Vector2(transform.position.x, transform.position.y - transform.localScale.y / 2), sphereRadius, groundMask);
        return collider != null;
    }

    private void OnDrawGizmos()
    {
        Gizmos.color = Color.yellow;
        Gizmos.DrawSphere(new Vector2(transform.position.x, transform.position.y - transform.localScale.y / 2), sphereRadius);
    }

    //private void OnCollisionEnter(Collision collision)
    //{
    //    if (collision.gameObject.layer == LayerMask.NameToLayer("Ground"))
    //    canJump = true;
